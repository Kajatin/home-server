version: '3.8'
services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - "67:67/udp"
      - '8053:80/tcp'
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN
    environment:
      TZ: Europe/Copenhagen
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: pihole.rolandkajatin.lan
      PROXY_LOCATION: pihole
      FTLCONF_LOCAL_IPV4: 10.0.0.231
      WEBPASSWORD:
      # DNSMASQ_LISTENING: all
    logging:
      driver: journald
    restart: unless-stopped

  hue-gpt:
    build:
      context: ./services/hue-gpt
      dockerfile: Dockerfile
    command: npm start
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
    user: "nextjs"
    env_file:
      - ./services/hue-gpt/.env.local
    logging:
      driver: journald
    restart: unless-stopped

  walkie-talkie-server:
    build:
      context: ./services/walkie-talkie/server
      dockerfile: Dockerfile
    command: npm start
    ports:
      - 4002:4002
    environment:
      - NODE_ENV=production
      - PORT=4002
    logging:
      driver: journald
    restart: unless-stopped

  walkie-talkie-client:
    build:
      context: ./services/walkie-talkie/app
      dockerfile: Dockerfile
    command: npm start
    ports:
      - 3001:3001
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3001
    user: "nextjs"
    logging:
      driver: journald
    restart: unless-stopped

  fleet-globe-server:
    build:
      context: ./services/fleet-globe/backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=production
      - PORT=8080
    env_file:
      - ./services/fleet-globe/backend/.env
    logging:
      driver: journald
    restart: unless-stopped

  fleet-globe-client:
    build:
      context: ./services/fleet-globe/frontend
      dockerfile: Dockerfile
    ports:
      - 4173:4173
    environment:
      - NODE_ENV=production
      - PORT=4173
    logging:
      driver: journald
    restart: unless-stopped

  # padel-club:
  #   build:
  #     context: ./services/padel-club
  #     dockerfile: Dockerfile
  #   command: npm start
  #   ports:
  #     - 3002:3002
  #   environment:
  #     - NODE_ENV=production
  #     - NEXT_TELEMETRY_DISABLED=1
  #     - PORT=3002
  #   user: "nextjs"
  #   logging:
  #     driver: journald
  #   restart: unless-stopped

  # pocketbase:
  #   build:
  #     context: ./services/padel-club
  #     dockerfile: ./database/Dockerfile
  #   ports:
  #     - "8090:8090"
  #   volumes:
  #     - ./services/padel-club/database/pb_data:/app/data/pb_data
